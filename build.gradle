apply plugin: 'application'
apply plugin: 'idea'
apply plugin: 'eclipse'

group = 'selenium-hybrid-application'
version = '0.0.1'

description = """"""

sourceCompatibility = 1.8
targetCompatibility = 1.8

sourceSets {
main {
java {
if(System.getProperty('idea.active')){
srcDir 'src'
}
else if(System.getProperty('eclipse.active')){
srcDir 'src/main/java'
}
}
}
}


eclipse.classpath.file.whenMerged {
    entries.findAll { it instanceof org.gradle.plugins.ide.eclipse.model.SourceFolder }.each { it.entryAttributes.remove("gradle_used_by_scope"); it.entryAttributes.remove("gradle_scope"); it.entryAttributes.remove("test"); it.output = "bin" }
    entries.findAll { it instanceof org.gradle.plugins.ide.eclipse.model.Library }.each { it.entryAttributes.remove("gradle_used_by_scope"); it.entryAttributes.remove("gradle_scope"); it.entryAttributes.remove("test") }
     
    
}

// In this section you declare where to find the dependencies of your project
repositories {   
  mavenCentral()
  //maven { url("https://plugins.gradle.org/m2/") }
  
  
}

dependencies {    
   // implementation files('CoreJarFile/SeleniumCoreJar7.5.jar')
    implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '4.1.2'
    // https://mvnrepository.com/artifact/io.github.bonigarcia/webdrivermanager
	implementation group: 'io.github.bonigarcia', name: 'webdrivermanager', version: '5.0.3'
    
	implementation('org.testng:testng:7.1.0')
     {
        exclude group: 'org.yaml', module: 'Snakeyaml'
    }
    implementation group: 'org.apache.poi', name: 'poi-ooxml', version:'5.1.0'
	implementation('com.aventstack:extentreports:5.0.0')//'4.0.6'//'3.1.5'
     {
        exclude group: 'com.google.code.gson', module: 'gson'
          exclude group: 'org.testng', module: 'testng'
    }
	
	implementation('com.aventstack:extentreports-testng-adapter:1.0.3')
   	 {
        exclude group: 'com.google.code.gson', module: 'gson'
        exclude group: 'org.testng', module: 'testng'
        
    }
    implementation('io.appium:java-client:8.0.0')
    {
   	 exclude group: 'org.springframework', module: 'spring-context'
    }
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.17.0'
    implementation group: 'com.oracle.database.jdbc', name: 'ojdbc8', version: '21.3.0.0'
    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version:'1.1.1'
	implementation('net.sf.json-lib:json-lib:2.4:jdk15')
    {
     exclude group: 'commons-collections', module: 'commons-collections'
     exclude group: 'commons-beanutils', module: 'commons-beanutils'
    }
	
    
    implementation group: 'com.microsoft.sqlserver', name: 'mssql-jdbc', version: '8.4.1.jre8'
    implementation group: 'io.rest-assured', name: 'rest-assured', version: '4.3.3' 
   implementation 'com.github.javafaker:javafaker:1.0.2'
}

task runRemoteTests(type: JavaExec, dependsOn: 'classes') {
    main = 'com.jivi.auto.maindriver.MainDriverScriptRemote'
    classpath = files("./src/test/resources",
                      project.sourceSets.main.compileClasspath,
                      project.sourceSets.test.compileClasspath,
                      project.sourceSets.main.runtimeClasspath,
                      project.sourceSets.test.runtimeClasspath)
	args = ["-parallel",  "methods", "-threadcount", "1", "-d", "./build/test-output", "./src/test/resources/test.xml"]                      	                                                
}

task runTests(type: Test) {
	//dependsOn runRemoteTests
    useTestNG() {
        testLogging.showStandardStreams = true
	//	outputDirectory = file("test-output")
        // report generation delegated to TestNG library:
        useDefaultListeners = true
        suites 'testng.xml'
    }
    //we want display the following test events
    testLogging {
      events "PASSED", "FAILED", "SKIPPED"
   }
reports.html.enabled = true

}
